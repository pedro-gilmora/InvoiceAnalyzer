@if (!Agent.IsProcessing)
{
    <Sources FilesContext="Agent"  />
}

<FluentInputFile Id="doc-receiver"
                 Mode="InputFileMode.Stream"
                 Multiple="true"
                 MaximumFileCount="4"
                 MaximumFileSize="@(50 * 1024 * 1024)"
                 Accept="image/*"
                 OnCompleted="@Agent.UploadFiles"
                 Style="border-radius: 4px;">
    <FluentStack Style="data-input" HorizontalGap="10" VerticalAlignment="VerticalAlignment.Center">

        @* <FluentIcon Value="@(new Size24.AddCircle())" Color="@Agent.IconColor" /> *@

        <FluentTextArea Disabled="Agent.DisableInput" @bind-Value="Agent.TextInput" Placeholder="Type a message..." Style="width: 100%;" @onkeyup="Agent.SendOnCtrlEnter" />

        @if (Agent.IsProcessing)
        {
            <FluentIcon Class="btn-stop" Disabled="@Agent.IsCanceling" OnClick="Agent.CancelAsync" Value="@(new Size16.Stop())" Color="Color.Neutral" />
        }
        else
        {
            <FluentIcon Class="btn-send" Disabled="@Agent.IsProcessing" OnClick="Agent.QueryAsync" Value="@(new Size16.Send())" Color="Color.Neutral" />
        }

    </FluentStack>

</FluentInputFile>
<style>
    .fluent-inputfile-container 
    {
        background-color: transparent !important;
        border: transparent !important;
        
        .inputfile-content
        {
            align-self: stretch !important;
            justify-self: stretch !important;
        }

        @if(!Agent.IsUploadingFiles){
            <text>
            .inputfile-progress {
                display: none;
            }
            </text>
        }
    }
</style>
@code {
    [CascadingParameter]
    public required EnterpriseAgent Agent { get; set; }
}